#!/bin/bash
## bat-mon
## by B.H., 07/05/2016

## Define initial variables
ActCrit="/sbin/poweroff"
BatCrit="7"
BatLow="20"
SndPath="/usr/share/sounds/fluxable/"
BatCrit_snd="${SndPath}battery-critical.ogg"
BatLow_snd="${SndPath}battery-low.ogg"
BatPath="/sys/class/power_supply/BAT0/"
Charging_snd="${SndPath}battery-charging.ogg"
Icon="/usr/share/icons/mate/48x48/devices/battery.png"
PLAYcmd="play -q"
Sleep="210"
SysSD_snd="${SndPath}sys-shutdown.ogg"

## Allow only one bat-mon instance
Count="$(pgrep -c bat-mon)"
if [ "$Count" -ge "2" ]; then
bmp="$(pgrep bat-mon)"
echo "$(date +%H:%M)- bat-mon, "$bmp" is running" >> /tmp/fbm.log
exit
fi
 
## Check for config files & parse any that are found.
     if [ -f /etc/fluxable/power.conf ]; then
. /etc/fluxable/power.conf
     fi

     if [ -f ~/.fluxable/power.conf ]; then
. ~/.fluxable/power.conf
     fi 

## Notification script
## Are we running a GUI?/Send GUI notification if so&
## always send wall msgs if a VT console is open.  
inform() {
GUI="$(pidof Xorg)"
     if [ -n "$GUI" ]; then 
/usr/bin/notify-send -i "$Icon" "${1}"
echo "GUI detected" >> /tmp/fbm.log
CLI="$(users|wc -w)"
if [ $CLI -ge "2" ]; then
/usr/bin/wall -n $1
     fi
     else
/usr/bin/wall -n $1
     fi
echo "$CLI log-in TTYs are open" >> /tmp/fbm.log
     }

RunAs="$(id -u)"
#XDG_RUNTIME_DIR="/run/user/${RunAs}"
echo "bat-mon started $(date)" >> /tmp/fbm.log
echo "User id: ${RunAs}" >> /tmp/fbm.log 

 if [ -e "$BatPath" ]; then
BatStat="$(<$BatPath/status)"
else
Msg1="Bat-mon can not access required data, so
you will not be informed when battery charge is low.
*this computer may shutdown with out warning."
inform "$Msg1"
fi

## Things to do when critical battery state is reached
crit() {
$PLAYcmd "$BatCrit_snd"
Msg2="*This computer will start shutting down in 1 minute!
*Save your work or risk losing recent changes.
*Alternatively, Plug or Pray!"
inform "$Msg2"
sleep 60
BatStat="$(<${BatPath}/status)"
     if [ "$BatStat" == "Charging" ]; then
$PLAYcmd "$Charging_snd"
Msg3="*Your battery is charging, so system shutdown has been suspended."
inform "$Msg3"
test
     else
$PLAYcmd "$SysSD_snd"
$ActCrit
fi
}

## Retestfor remaining charge
 test() {
while [ "$CHARGE" -gt "$BatCrit" ]; do
sleep "$Sleep"
         CHARGE="$(<$BatPath/capacity)"
     if [ "$CHARGE" -le "$BatCrit" ]; then
crit
elif [ "$CHARGE" -gt "$BatLow" ]; then
exit
fi
done
}

     if [ "$BatStat" == "Discharging" ]; then
         CHARGE="$(<$BatPath/capacity)"
     if [ "$CHARGE" -le "$BatCrit" ]; then
crit
     elif [ "$CHARGE" -le "$BatLow" ]; then
$PLAYcmd "$BatLow_snd"
Msg4="*Low Battery Alert: ${CHARGE}% Remains*"
inform "$Msg4"
    test     
fi
     fi
